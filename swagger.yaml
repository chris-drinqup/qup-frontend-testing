openapi: 3.0.0
info:
  title: QUP API
  description: Advanced Queue Management System with ML Predictions
  version: 2.0.0
  contact:
    name: QUP API Support
    email: support@qupapi.com

servers:
  - url: https://qupcore-supercode-692478335867.us-central1.run.app
    description: Production Server

security:
  - ApiKeyAuth: []
  - BearerAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    QueueItem:
      type: object
      properties:
        id:
          type: string
          example: "order123"
        payload:
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: "Coffee"
                  quantity:
                    type: integer
                    example: 1
        priority:
          type: integer
          minimum: 100
          maximum: 1000
          example: 500
        user_id:
          type: string
          example: "customer123"

paths:
  /health:
    get:
      summary: Health Check
      description: Check API health status
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"

  /api/v1/auth/login:
    post:
      summary: Admin Login
      description: Authenticate admin user and get JWT token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "admin"
                password:
                  type: string
                  example: "admin123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: "bearer"
                  user_type:
                    type: string
                    example: "admin"

  /api/v1/queue/add:
    post:
      summary: Add Item to Queue
      description: Add a new item to the queue with ML time prediction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueItem'
      responses:
        '201':
          description: Item added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  id:
                    type: string
                    example: "order123"
                  priority:
                    type: integer
                    example: 500
                  position:
                    type: integer
                    example: 2
                  estimated_time:
                    type: number
                    example: 180.5

  /api/v1/queue/list:
    get:
      summary: List Queue Items
      description: Get all items in the queue
      parameters:
        - name: user_id
          in: query
          schema:
            type: string
          description: Filter by user ID
        - name: admin
          in: query
          schema:
            type: boolean
          description: Admin view (requires JWT)
        - name: search
          in: query
          schema:
            type: string
          description: Search filter
      responses:
        '200':
          description: Queue items retrieved successfully

  /api/v1/queue/qup:
    post:
      summary: Perform QUP Operation
      description: Move up in queue using QUP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "order123"
                qup_type:
                  type: string
                  enum: ["super", "negotiation", "chaos"]
                  example: "super"
                target_position:
                  type: integer
                  example: 1
      responses:
        '200':
          description: QUP operation completed

  /api/v1/queue/complete:
    post:
      summary: Complete Item
      description: Mark an item as completed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "order123"
                user_id:
                  type: string
                  example: "customer123"
      responses:
        '200':
          description: Item completed successfully

  /api/v1/queue/configure:
    get:
      summary: Get Queue Configuration
      description: Get current queue configuration (Admin only)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Configuration retrieved successfully

    post:
      summary: Update Queue Configuration
      description: Update queue configuration (Admin only)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queue_name:
                  type: string
                  example: "Production Queue"
                super_qup_enabled:
                  type: boolean
                  example: true
                qup_overhead_percent:
                  type: number
                  example: 10.0
                ml_enabled:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Configuration updated successfully

  /api/v1/ml/stats:
    get:
      summary: Get ML Statistics
      description: Get machine learning model statistics (Admin only)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: ML statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  ml_stats:
                    type: object
                    properties:
                      total_models:
                        type: integer
                        example: 3
                      average_accuracy:
                        type: number
                        example: 0.85
